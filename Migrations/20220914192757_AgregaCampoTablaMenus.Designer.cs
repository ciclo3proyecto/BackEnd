// <auto-generated />
using System;
using InventoryApp.Api.Infraestructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryApp.Api.Migrations
{
    [DbContext(typeof(g5FtGnkAVWContext))]
    [Migration("20220914192757_AgregaCampoTablaMenus")]
    partial class AgregaCampoTablaMenus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8_unicode_ci")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8");

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Actualizado")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creado");

                    b.Property<int>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("Eliminado")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.Property<string>("Opcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Opcion");

                    b.Property<int>("PadreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("PadreId");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ruta");

                    b.HasKey("Id");

                    b.ToTable("menus", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Actualizado")
                        .HasColumnType("date")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<decimal?>("Cantidad")
                        .HasPrecision(19, 2)
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("cantidad");

                    b.Property<DateOnly?>("Creado")
                        .HasColumnType("date")
                        .HasColumnName("creado");

                    b.Property<int>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<DateOnly?>("Eliminado")
                        .HasColumnType("date")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<decimal?>("Precio")
                        .HasPrecision(19, 2)
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("precio");

                    b.Property<int>("ProductosId")
                        .HasColumnType("int(11)")
                        .HasColumnName("productos_id");

                    b.Property<int>("TiposmovimientosId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tiposmovimientos_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProductosId" }, "movimientos_productos_fk");

                    b.HasIndex(new[] { "TiposmovimientosId" }, "movimientos_tiposmovimientos_fk");

                    b.HasIndex(new[] { "Creadopor" }, "movimientos_usuarios_fk");

                    b.ToTable("movimientos", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Perfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Actualizado")
                        .HasColumnType("date")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<DateOnly?>("Creado")
                        .HasColumnType("date")
                        .HasColumnName("creado");

                    b.Property<int?>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly?>("Eliminado")
                        .HasColumnType("date")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("perfiles", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Actualizado")
                        .HasColumnType("date")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<DateOnly?>("Creado")
                        .HasColumnType("date")
                        .HasColumnName("creado");

                    b.Property<int?>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<DateOnly?>("Eliminado")
                        .HasColumnType("date")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.Property<int>("MenusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("menus_id");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int(11)")
                        .HasColumnName("perfil_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MenusId" }, "permisos_menus_fk");

                    b.HasIndex(new[] { "PerfilId" }, "permisos_perfil_fk");

                    b.ToTable("permisos", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Actualizado")
                        .HasColumnType("date")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo");

                    b.Property<DateOnly?>("Creado")
                        .HasColumnType("date")
                        .HasColumnName("creado");

                    b.Property<int>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly?>("Eliminado")
                        .HasColumnType("date")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.Property<decimal?>("Existencia")
                        .HasPrecision(19, 2)
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("existencia");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Precio")
                        .HasPrecision(19, 2)
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("precio");

                    b.Property<int>("UnidadesId")
                        .HasColumnType("int(11)")
                        .HasColumnName("unidades_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UnidadesId" }, "productos_unidades_fk");

                    b.HasIndex(new[] { "Creadopor" }, "productos_usuarios_fk");

                    b.ToTable("productos", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Tiposdocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Actualizado")
                        .HasColumnType("date")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<DateOnly?>("Creado")
                        .HasColumnType("date")
                        .HasColumnName("creado");

                    b.Property<int?>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly?>("Eliminado")
                        .HasColumnType("date")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("tiposdocumentos", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Tiposmovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Actualizado")
                        .HasColumnType("date")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<string>("Afectacion")
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("afectacion")
                        .IsFixedLength();

                    b.Property<DateOnly?>("Creado")
                        .HasColumnType("date")
                        .HasColumnName("creado");

                    b.Property<int>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly?>("Eliminado")
                        .HasColumnType("date")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Creadopor" }, "tiposmovimientos_usuarios_fk");

                    b.ToTable("tiposmovimientos", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Actualizado")
                        .HasColumnType("date")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<DateOnly?>("Creado")
                        .HasColumnType("date")
                        .HasColumnName("creado");

                    b.Property<int?>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly?>("Eliminado")
                        .HasColumnType("date")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("unidades", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Actualizado")
                        .HasColumnType("date")
                        .HasColumnName("actualizado");

                    b.Property<int?>("Actualizadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("actualizadopor");

                    b.Property<DateOnly?>("Creado")
                        .HasColumnType("date")
                        .HasColumnName("creado");

                    b.Property<int?>("Creadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("creadopor");

                    b.Property<DateOnly?>("Eliminado")
                        .HasColumnType("date")
                        .HasColumnName("eliminado");

                    b.Property<int?>("Eliminadopor")
                        .HasColumnType("int(11)")
                        .HasColumnName("eliminadopor");

                    b.Property<string>("Estado")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("estado");

                    b.Property<decimal?>("Identificacion")
                        .HasPrecision(28)
                        .HasColumnType("decimal(28)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Nombres")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nombres");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<int>("PerfilesId")
                        .HasColumnType("int(11)")
                        .HasColumnName("perfiles_id");

                    b.Property<string>("Primerapellido")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("primerapellido");

                    b.Property<string>("Segundoapellido")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("segundoapellido");

                    b.Property<int>("TiposdocumentosId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tiposdocumentos_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PerfilesId" }, "usuarios_perfiles_fk");

                    b.HasIndex(new[] { "TiposdocumentosId" }, "usuarios_tiposdocumentos_fk");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Movimiento", b =>
                {
                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Usuario", "CreadoporNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("Creadopor")
                        .IsRequired()
                        .HasConstraintName("movimientos_usuarios_fk");

                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Producto", "Productos")
                        .WithMany("Movimientos")
                        .HasForeignKey("ProductosId")
                        .IsRequired()
                        .HasConstraintName("movimientos_productos_fk");

                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Tiposmovimiento", "Tiposmovimientos")
                        .WithMany("Movimientos")
                        .HasForeignKey("TiposmovimientosId")
                        .IsRequired()
                        .HasConstraintName("movimientos_tiposmovimientos_fk");

                    b.Navigation("CreadoporNavigation");

                    b.Navigation("Productos");

                    b.Navigation("Tiposmovimientos");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Permiso", b =>
                {
                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Menu", "Menus")
                        .WithMany("Permisos")
                        .HasForeignKey("MenusId")
                        .IsRequired()
                        .HasConstraintName("permisos_menus_fk");

                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Perfile", "Perfil")
                        .WithMany("Permisos")
                        .HasForeignKey("PerfilId")
                        .IsRequired()
                        .HasConstraintName("permisos_perfil_fk");

                    b.Navigation("Menus");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Producto", b =>
                {
                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Usuario", "CreadoporNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Creadopor")
                        .IsRequired()
                        .HasConstraintName("productos_usuarios_fk");

                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Unidade", "Unidades")
                        .WithMany("Productos")
                        .HasForeignKey("UnidadesId")
                        .IsRequired()
                        .HasConstraintName("productos_unidades_fk");

                    b.Navigation("CreadoporNavigation");

                    b.Navigation("Unidades");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Tiposmovimiento", b =>
                {
                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Usuario", "CreadoporNavigation")
                        .WithMany("Tiposmovimientos")
                        .HasForeignKey("Creadopor")
                        .IsRequired()
                        .HasConstraintName("tiposmovimientos_usuarios_fk");

                    b.Navigation("CreadoporNavigation");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Usuario", b =>
                {
                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Perfile", "Perfiles")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilesId")
                        .IsRequired()
                        .HasConstraintName("usuarios_perfiles_fk");

                    b.HasOne("InventoryApp.Api.Infraestructure.Contexts.Tiposdocumento", "Tiposdocumentos")
                        .WithMany("Usuarios")
                        .HasForeignKey("TiposdocumentosId")
                        .IsRequired()
                        .HasConstraintName("usuarios_tiposdocumentos_fk");

                    b.Navigation("Perfiles");

                    b.Navigation("Tiposdocumentos");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Menu", b =>
                {
                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Perfile", b =>
                {
                    b.Navigation("Permisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Producto", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Tiposdocumento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Tiposmovimiento", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Unidade", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("InventoryApp.Api.Infraestructure.Contexts.Usuario", b =>
                {
                    b.Navigation("Movimientos");

                    b.Navigation("Productos");

                    b.Navigation("Tiposmovimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
